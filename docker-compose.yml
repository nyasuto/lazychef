version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - FRONTEND_URL=http://localhost:3000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./backend/data:/root/data
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - lazychef-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:8080/api
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - lazychef-network

  # Development services
  backend-dev:
    profiles: ["dev"]
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - FRONTEND_URL=http://localhost:3000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./backend:/app
      - ./backend/data:/app/data
    command: ["go", "run", "cmd/api/main.go"]
    networks:
      - lazychef-network

  frontend-dev:
    profiles: ["dev"]
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8080/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host"]
    depends_on:
      - backend-dev
    networks:
      - lazychef-network

networks:
  lazychef-network:
    driver: bridge

volumes:
  backend-data:
    driver: local